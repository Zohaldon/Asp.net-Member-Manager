@model A4.Models.Member

@{
    ViewData["Title"] = "Delete";
}

@using System.Security.Cryptography;
@using Microsoft.AspNetCore.Cryptography.KeyDerivation;
@{
    byte[] salt = new byte[128 / 8];
    using (var rng = RandomNumberGenerator.Create())
    {
        rng.GetBytes(salt);
    }
}


<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Member</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Province)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Province)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PostalCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PostalCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Age)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Password)
        </dt>
        <dd>

            @{
                string pswd = Convert.ToBase64String(KeyDerivation.Pbkdf2(
            password: Model.Password,
            salt: salt,
            prf: KeyDerivationPrf.HMACSHA1,
            iterationCount: 10000,
            numBytesRequested: 256 / 8));
            }

            @pswd;
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ConfirmPassword)
        </dt>
        <dd>
            @{
                string Confirmpswd = Convert.ToBase64String(KeyDerivation.Pbkdf2(
            password: Model.ConfirmPassword,
            salt: salt,
            prf: KeyDerivationPrf.HMACSHA1,
            iterationCount: 10000,
            numBytesRequested: 256 / 8));
            }
            @Confirmpswd;
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AltEmail)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AltEmail)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="MemberId" />
        <input type="submit" value="Delete" class="btn btn-default" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
